on:
  workflow_call:

runs:
  using: 'composite'
  steps:
    - uses: 'actions/checkout@v3'
    - uses: 'rios0rios0/pipelines/github/golang/abstracts/scripts-repo@feat/#19'

    - uses: actions/github-script@v7
      id: get_check_runs
      with:
        script: |
          const { data: prData } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          const { data: checkRunsData } = await github.rest.checks.listForRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: prData.head.sha
          });
          const checkRun = checkRunsData.check_runs.find(run => run.name.includes('golangci-lint'));
          return { id: checkRun.id, head_sha: checkRun.head_sha, check_suite_id: checkRun.check_suite.id };

    - id: 'golangci_lint'
      run: $SCRIPTS_DIR/global/scripts/golangci-lint/run.sh || echo "EXIT_CODE=$?" >> $GITHUB_ENV && exit $EXIT_CODE
      shell: 'bash'
      continue-on-error: true

    - uses: actions/github-script@v7
      with:
        script: |
          const checkRunInfo = ${{ steps.get_check_runs.outputs.result }};
          await github.rest.checks.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: 'new-check-run',
            head_sha: checkRunInfo.head_sha,
            check_suite_id: checkRunInfo.check_suite_id,
            status: 'completed',
            conclusion: "${{ env.EXIT_CODE != 0 && 'failure' || 'success' }}",
            output: {
              title: "there are issues in the code (${{ env.EXIT_CODE }}) :x:",
              summary: "Please fix the issues in the code",
              text: "bbbb"
            }
          });
