stages:
  - stage: 'delivery'
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    displayName: 'delivery'
    jobs:
      - job: 'delivery'
        displayName: 'delivery'
        steps:
          - template: '../../../global/abstracts/clone-and-move-plugin-steps.yml'
            parameters:
              TAG_NAME: '2.11.1'
              PLUGIN_NAME: 'app'
              COMMANDS: 'yarn osd bootstrap && yarn build'
              ARTIFACT_NAME: 'build'
              ARTIFACT_PATH: 'build'
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'build'
              downloadPath: '.'
          - task: Docker@2
            displayName: Login
            inputs:
              command: login
              containerRegistry: '$(DOCKER_REGISTRY_ENDPOINT)'
          - script: |
              docker buildx create --use
          # DOCKER_CONTAINER_IMAGE = registry + image name + tag (for dev, always latest)
          - script: |
              docker buildx build --platform linux/amd64,linux/arm64 -t $(DOCKER_CONTAINER_IMAGE) --push .
            condition: not(startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
          # DOCKER_CONTAINER_IMAGE = registry + image name + tag (for prod, the semver + latest)
          - script: |
              imageName=$(echo $(DOCKER_CONTAINER_IMAGE) | cut -d':' -f1)
              docker buildx build --platform linux/amd64,linux/arm64 -t $(DOCKER_CONTAINER_IMAGE) -t $imageName:latest --push .
            condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
      - template: '../../../global/stages/40-delivery/release.yaml'
